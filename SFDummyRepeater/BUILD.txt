Repeater - 20150507
===================

Windows
-------

To use the Repeater control software you will first need to build the latest
version of wxWidgets (http://www.wxwidgets.org), the version I used was 2.8.12,
I also installed it in the default location which is C:\wxWidgets-2.8.12.

You will also need a copy of PortAudio (http://www.portaudio.com), I used the
latest stable version which is currently 20071207 and it appears to be fine. I
put that into the "Visual Studio 2008\Projects" folder alongside the source code
for Repeater itself. A skeleton version of PortAudio suitable for using to build 
Repeater is available from the pcrepeatercontroller Yahoo group in the 
Files/Windows Extras folder.

For compiling I use Visual C++ 2008 Express Edition downloaded from Microsoft
for free. I recommend that you use the same.

To build wxWidgets, you simply need to open Visual Studio 2008 using the File ->
Open -> Projects/Solutions and load the wx_dll.dsw file to be found in
wxWidgets-2.8.12\build\msw directory and then go into Batch Build and select the
DLL Unicode Debug and DLL Uncode Release entries for every one, this take a 
little time! Then build them.

Unfortunately building the software under Windows also requires the downloading 
of a very large file from Microsoft, the WDK. Adding this to Visual Studio 
causes a lot of problems, so I created an extract of the required files from the 
kit and used that instead. If you do want to build this software from scratch, 
then download the files HID.zip and WinUSB.zip from the Yahoo! group. Otherwise
simply use the supplied binaries.

The path names for things like wxWidgets and PortAudio are embedded within the
Solution and Project preferences, and will need changing if anything other than
these default locations are used. The first pass through the compiler will no
doubt tell you all that you need to know if there are problems.

Once you have built the executables, you will need to copy the 
portaudio_x86.dll, wxbase28u_vc_custom.dll, wxmsw28u_adv_vc_custom.dll, 
and wxmsw28u_core_vc_custom.dll to the same directory as your newly 
built executables in order for it to run. If you are running in debug mode then 
the required wxWidgets files have the names xxx28ud_xxxx instead. These can be 
found in the wxWidgets-2.8.12\lib\vc_dll directory.

It is also probable that you'll need to install a copy of the latest Visual C++
run-time libraries from Microsoft, if you are not running the Repeater software
on the same machine as the development/compilation was done on. To do this you
need to copy and run the Vcredist_x86.exe file which is found at
<http://www.microsoft.com/en-gb/download/details.aspx?id=5582>

Linux
-----

You need to ensure that wxGTK, ALSA and libusb-1.0 are already 
installed on your machine, under Ubuntu these are available from the standard 
repositories, the version of wxWidgets is adequate. However you should get the 
latest version of PortAudio from its home and build it from scratch.

To install them from scratch, you need to get wxGTK from 
<http://www.wxwidgets.org> and libusb-1.0 from
<http://www.libusb.org/wiki/libusb-1.0>. ALSA should be available as part of
your operating system. If you do a "make install" on  all of them then they'll
be installed in the right places and nothing more needs to be done.

On the Raspberry Pi you will need to build and install the wiringPi GPIO library
which is available from <https://projects.drogon.net/raspberry-pi/wiringpi>.
This will allow use the GPIO pins as controller pins for the different repeaters
if needed.

The top level Makefile includes platform specific settings from the file 
"settings.mk". The default file is for x86 Linux systems. Samples for other
platforms are provided by other developers, copy a required version to
"settings.mk" when needed.

To actually build the software, type "make" in the same directory as this file
and all should build without errors, there may be a warning or two though. Once
compiled log in as root or use the sudo command, and do "make install".
